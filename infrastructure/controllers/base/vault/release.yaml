apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: vault
  namespace: vault
spec:
  interval: 30m
  chart:
    spec:
      chart: "vault"
      version: "0.30.0"
      sourceRef:
        kind: HelmRepository
        name: vault
        namespace: vault
      interval: 12h
  install:
    crds: Create
  upgrade:
    crds: CreateReplace
  values:
    global:
      enabled: true
      tlsDisable: false

    injector:
      enabled: false

    server:
      # resources:
      #   requests:
      #     cpu: 20m
      #     memory: 64Mi
      #   limits:
      #     cpu: 20m
      #     memory: 64Mi
      affinity: null
      serviceAccount:
        create: true
        name: vault
        serviceDiscovery:
          enabled: true
      ingress:
        enabled: false
        ingressClassName: traefik

      image:
        repository: "hashicorp/vault"
        tag: "1.16.1"

      # readinessProbe:
      #   enabled: true
      #   path: "/v1/sys/health?standbyok=true&sealedcode=204&uninitcode=204"
      # livenessProbe:
      #   enabled: true
      #   path: "/v1/sys/health?standbyok=true"
      #   initialDelaySeconds: 60

      # volumes:
      #   - name: downward
      #     emptyDir: {}

      # extraInitContainers:
      #   - name: inject-downward-api-vars
      #     image: busybox
      #     command: ["sh", "-c"]
      #     args:
      #       - |
      #         echo "$POD_NAME" > /vault/downward/pod;
      #         echo "$POD_NAMESPACE" > /vault/downward/ns;
      #     env:
      #       - name: POD_NAME
      #         valueFrom:
      #           fieldRef:
      #             fieldPath: metadata.name
      #       - name: POD_NAMESPACE
      #         valueFrom:
      #           fieldRef:
      #             fieldPath: metadata.namespace
      #     volumeMounts:
      #       - name: downward
      #         mountPath: /vault/downward

      # volumeMounts:
      #   - name: downward
      #     mountPath: /vault/downward

      extraEnvironmentVars:
        # VAULT_K8S_POD_NAME_FILE: /vault/downward/pod
        # VAULT_K8S_NAMESPACE_FILE: /vault/downward/ns
        VAULT_CACERT: /vault/userconfig/vault-internal-tls-secret/ca.crt

      # extraSecretEnvironmentVars:
      #   - envName: AWS_ACCESS_KEY_ID
      #     secretName: eks-creds
      #     secretKey: AWS_ACCESS_KEY_ID
      #   - envName: AWS_SECRET_ACCESS_KEY
      #     secretName: eks-creds
      #     secretKey: AWS_SECRET_ACCESS_KEY

      extraVolumes:
        - type: secret
          name: vault-internal-tls-secret
    
      dataStorage:
        enabled: true
      auditStorage:
        enabled: true

      standalone:
        enabled: false

      ha:
        enabled: true
        replicas: 5
        apiAddr: "https://vault.undefinedlab.uk:8200"
        raft:
          enabled: true
          setNodeId: true
          config: |
            # seal "awskms" {
            #   region     = "eu-west-3"
            #   kms_key_id = "7bfdde74-57d0-4382-88aa-2cef282369cb"
            # }
            ui = true
            cluster_name = "vault-integrated-storage"
            listener "tcp" {
              address = "[::]:8200"
              cluster_address = "[::]:8201"
              tls_cert_file = "/vault/userconfig/vault-internal-tls-secret/tls.crt"
              tls_key_file = "/vault/userconfig/vault-internal-tls-secret/tls.key"
            }

            storage "raft" {
              path = "/vault/data"
              retry_join {
                leader_api_addr = "https://vault-0.vault-internal:8200"
                leader_ca_cert_file = "/vault/userconfig/vault-internal-tls-secret/ca.crt"
                leader_client_cert_file = "/vault/userconfig/vault-internal-tls-secret/tls.crt"
                leader_client_key_file = "/vault/userconfig/vault-internal-tls-secret/tls.key"
              }
              retry_join {
                leader_api_addr = "https://vault-1.vault-internal:8200"
                leader_ca_cert_file = "/vault/userconfig/vault-internal-tls-secret/ca.crt"
                leader_client_cert_file = "/vault/userconfig/vault-internal-tls-secret/tls.crt"
                leader_client_key_file = "/vault/userconfig/vault-internal-tls-secret/tls.key"
              }
              retry_join {
                leader_api_addr = "https://vault-2.vault-internal:8200"
                leader_ca_cert_file = "/vault/userconfig/vault-internal-tls-secret/ca.crt"
                leader_client_cert_file = "/vault/userconfig/vault-internal-tls-secret/tls.crt"
                leader_client_key_file = "/vault/userconfig/vault-internal-tls-secret/tls.key"
              }
              retry_join {
                leader_api_addr = "https://vault-3.vault-internal:8200"
                leader_ca_cert_file = "/vault/userconfig/vault-internal-tls-secret/ca.crt"
                leader_client_cert_file = "/vault/userconfig/vault-internal-tls-secret/tls.crt"
                leader_client_key_file = "/vault/userconfig/vault-internal-tls-secret/tls.key"
              }
              retry_join {
                leader_api_addr = "https://vault-4.vault-internal:8200"
                leader_ca_cert_file = "/vault/userconfig/vault-internal-tls-secret/ca.crt"
                leader_client_cert_file = "/vault/userconfig/vault-internal-tls-secret/tls.crt"
                leader_client_key_file = "/vault/userconfig/vault-internal-tls-secret/tls.key"
              }
            }

            service_registration "kubernetes" {}
        active:
          enabled: true
        standby:
          enabled: true
      ui:
        enabled: true
        serviceType: "ClusterIP"
        externalPort: 8200
